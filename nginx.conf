#pid       /var/log/nginx/nginx.pid;
#error_log /var/log/nginx/error.log;

events {
    worker_connections  1024;
}

http {
        server {
                listen 80;
                listen [::]:80 default_server ipv6only=on;
                server_name etest.programminggeek.in;
                return 301 https://$host$request_uri;
        }

        # HTTPS - proxy requests on to local Node.js app:
        server {
                listen 443;
                server_name etest.programminggeek.in;
        	#gzip content
        	gzip on;
        	gzip_http_version 1.1;
        	gzip_vary on;
        	gzip_comp_level 6;
        	gzip_proxied any;
        	gzip_types text/plain text/html text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript text/x-js;
        	gzip_buffers 16 8k;
        	gzip_disable "MSIE [1-6]\.(?!.*SV1)";
        	# Set proxy cache path
        	#proxy_cache_path /var/nginx/cache levels=1:2 keys_zone=akosha_cache:60m inactive=90m max_size=1000m;

                ssl on;
                # Use certificate and key provided by Let's Encrypt:
                ssl_certificate /usr/local/etc/nginx/fullchain.pem;
                ssl_certificate_key /usr/local/etc/nginx/privkey.pem;
                ssl_session_timeout 5m;
                ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
                ssl_prefer_server_ciphers on;
                ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

                # Pass requests for / to localhost:8080:
                location / {

        		#Setting expires header for static assets like css, js, images etc so that they are cached by the browser.
        		if ($request_uri ~* ".(jpg|jpeg|gif|gz|zip|flv|rar|wmv|avi|css|swf|png|htc|ico|mpeg|mpg|txt|mp3|mov|js)(\?v=[0-9.]+)?$") {
        			expires 30d;
        			access_log off;
        			break;
        		}

        		#Adding a header to see the cache status in the browser
        		add_header X-Cache-Status $upstream_cache_status;

                        proxy_set_header X-Real-IP $remote_addr;
                        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                        proxy_set_header X-NginX-Proxy true;
                        proxy_pass http://localhost:3000/;
                        proxy_ssl_session_reuse off;
                        proxy_set_header Host $http_host;
                        proxy_cache_bypass $http_upgrade;
                        proxy_redirect off;
                }
        	location ~ /.well-known {
                        allow all;
                }
        }
}
